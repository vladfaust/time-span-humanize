crystal_doc_search_index_callback({"repository_name":"github.com/vladfaust/time-span-humanize","body":"# Time::Span#humanize\n\n[![Built with Crystal](https://img.shields.io/badge/built%20with-crystal-000000.svg?style=flat-square)](https://crystal-lang.org/)\n[![Build status](https://img.shields.io/travis/vladfaust/time-span-humanize/master.svg?style=flat-square)](https://travis-ci.org/vladfaust/time-span-humanize)\n[![API Docs](https://img.shields.io/badge/api_docs-online-brightgreen.svg?style=flat-square)](https://github.vladfaust.com/time-span-humanize)\n[![Releases](https://img.shields.io/github/release/vladfaust/time-span-humanize.svg?style=flat-square)](https://github.com/vladfaust/time-span-humanize/releases)\n[![Awesome](https://awesome.re/badge-flat2.svg)](https://github.com/veelenga/awesome-crystal)\n[![vladfaust.com](https://img.shields.io/badge/style-.com-lightgrey.svg?longCache=true&style=flat-square&label=vladfaust&colorB=0a83d8)](https://vladfaust.com)\n[![Patrons count](https://img.shields.io/badge/dynamic/json.svg?label=patrons&url=https://www.patreon.com/api/user/11296360&query=$.included[0].attributes.patron_count&style=flat-square&colorB=red&maxAge=86400)](https://www.patreon.com/vladfaust)\n[![Gitter chat](https://img.shields.io/badge/chat%20on-gitter-green.svg?colorB=ED1965&logo=gitter&style=flat-square)](https://gitter.im/vladfaust/Lobby)\n\n`Time::Span#humanize` method for [Crystal](https://crystal-lang.org/).\n\n[![Become a Patron](https://vladfaust.com/img/patreon-small.svg)](https://www.patreon.com/vladfaust)\n\n## Installation\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  time-span-humanize:\n    github: vladfaust/time-span-humanize\n    version: ~> 0.1.0\n```\n\nThis shard follows [Semantic Versioning v2.0.0](http://semver.org/), so check [releases](https://github.com/vladfaust/time-span-humanize/releases) and change the `version` accordingly.\n\n> Note that until Crystal is officially released, this shard would be in beta state (`0.*.*`), with every **minor** release considered breaking. For example, `0.1.0` → `0.2.0` is breaking and `0.1.0` → `0.1.1` is not.\n\n## Usage\n\n```crystal\nrequire \"time-span-humanize\"\n42.milliseconds.humanize # => \"42ms\"\n```\n\n## Contributing\n\n1. Fork it ( https://github.com/vladfaust/time-span-humanize/fork )\n2. Create your feature branch (git checkout -b my-new-feature)\n3. Commit your changes (git commit -am 'feat: some feature') using [Angular style commits](https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit)\n4. Push to the branch (git push origin my-new-feature)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Vlad Faust](https://github.com/vladfaust) - creator and maintainer\n","program":{"html_id":"github.com/vladfaust/time-span-humanize/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/vladfaust/time-span-humanize","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/vladfaust/time-span-humanize/Time","path":"Time.html","kind":"struct","full_name":"Time","name":"Time","abstract":false,"superclass":{"html_id":"github.com/vladfaust/time-span-humanize/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/vladfaust/time-span-humanize/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/vladfaust/time-span-humanize/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/vladfaust/time-span-humanize/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/vladfaust/time-span-humanize/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"time-span-humanize.cr","line_number":2,"url":"https://github.com/vladfaust/time-span-humanize/blob/57f8d45997b73a75d6466973c605ea37d3ec22e8/src/time-span-humanize.cr"}],"repository_name":"github.com/vladfaust/time-span-humanize","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/vladfaust/time-span-humanize/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Extensions to the stdlib `Time` struct.","summary":"<p>Extensions to the stdlib <code><a href=\"Time.html\">Time</a></code> struct.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/vladfaust/time-span-humanize/Time/Span","path":"Time/Span.html","kind":"struct","full_name":"Time::Span","name":"Span","abstract":false,"superclass":{"html_id":"github.com/vladfaust/time-span-humanize/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/vladfaust/time-span-humanize/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/vladfaust/time-span-humanize/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/vladfaust/time-span-humanize/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/vladfaust/time-span-humanize/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"time-span-humanize.cr","line_number":4,"url":"https://github.com/vladfaust/time-span-humanize/blob/57f8d45997b73a75d6466973c605ea37d3ec22e8/src/time-span-humanize.cr"}],"repository_name":"github.com/vladfaust/time-span-humanize","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/vladfaust/time-span-humanize/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/vladfaust/time-span-humanize/Time","kind":"struct","full_name":"Time","name":"Time"},"doc":"Extensions to the stdlib `Time::Span` struct.","summary":"<p>Extensions to the stdlib <code><a href=\"../Time/Span.html\">Time::Span</a></code> struct.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"humanize(io:IO)-instance-method","html_id":"humanize(io:IO)-instance-method","name":"humanize","doc":"Humanize the time span, writing it into *io*.\nThis method does not know about units other than second and its fractions.\n\n```\n1.second.humanize(STDOUT)         # => 1.0s\n500.milliseconds.humanize(STDOUT) # => 500ms\n5.minutes.humanize(STDOUT)        # => 300s\n10.hours.humanize(STDOUT)         # => 36,000s\n```\n\nIt's based on [Johannes Müller](https://github.com/straight-shoota)'s code found in [`crystal/src/benchmark/ips.cr`](https://github.com/crystal-lang/crystal/blob/639e4765f3f4137f90c5b7da24d8ccb5b0bfec35/src/benchmark/ips.cr#L191).","summary":"<p>Humanize the time span, writing it into <em>io</em>.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","source_link":"https://github.com/vladfaust/time-span-humanize/blob/57f8d45997b73a75d6466973c605ea37d3ec22e8/src/time-span-humanize.cr#L24","def":{"name":"humanize","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"total_seconds.humanize(io, precision: 3, significant: true) do |magnitude|\n  magnitude = (Number.prefix_index(magnitude)).clamp(-9..0)\n  next {magnitude, magnitude == 0 ? 's' : \"#{Number.si_prefix(magnitude)}s\"}\nend"}},{"id":"humanize-instance-method","html_id":"humanize-instance-method","name":"humanize","doc":"Humanize the time span, returning a `String` in human-readable format.\nSee `#humanize(io)`.","summary":"<p>Humanize the time span, returning a <code>String</code> in human-readable format.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/time-span-humanize/blob/57f8d45997b73a75d6466973c605ea37d3ec22e8/src/time-span-humanize.cr#L7","def":{"name":"humanize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"String.build(5) do |io|\n  humanize(io)\nend"}}],"macros":[],"types":[]}]}]}})